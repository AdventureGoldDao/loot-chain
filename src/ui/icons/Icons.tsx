import { SVGAttributes } from "react";

export const Logo = (props) => {
	return (
		<svg width="199" height="73" viewBox="0 0 199 73" fill="none" xmlns="http://www.w3.org/2000/svg">
			<ellipse cx="53.947" cy="36.4184" rx="26.4603" ry="26.3946" fill="#C0CAFD"/>
			<ellipse cx="52.7374" cy="35.5135" rx="25.2507" ry="25.4897" fill="#A5A4E6"/>
			<ellipse rx="23.848" ry="24.788" transform="matrix(0.754895 0.655846 -0.657702 0.753278 51.6941 34.3129)" fill="#C0CAFD"/>
			<path d="M62.0363 31.8435C66.4512 20.8334 57.8026 11.8591 47.6721 13.7444C37.5416 15.6296 30.1327 27.4442 30.1327 32.9494C30.1327 38.4546 30.8887 45.116 39.2804 47.077C47.6721 49.038 57.6213 42.8536 62.0363 31.8435Z" fill="#CCD4FF"/>
			<path d="M47.9306 17.1274C51.3327 17.4291 53.3739 21.5768 49.1402 21.5768C44.9066 21.5768 40.8241 25.2721 38.4805 28.4394C36.137 31.6068 34.5494 29.7969 36.5905 25.4983C38.6316 21.1997 44.5286 16.8258 47.9306 17.1274Z" fill="#E6E8FF"/>
			<ellipse cx="34.7444" cy="32.7985" rx="1.51202" ry="1.50826" fill="#E6E8FF"/>
			<ellipse cx="24.8948" cy="51.1272" rx="18.0182" ry="17.9252" fill="#F4C0FD"/>
			<ellipse cx="24.0711" cy="50.5126" rx="17.1945" ry="17.3106" fill="#E4A4E6"/>
			<ellipse rx="16.2206" ry="16.8537" transform="matrix(0.755767 0.65484 -0.658706 0.752401 23.3607 49.6973)" fill="#F4C0FD"/>
			<path d="M30.4032 48.0204C33.4095 40.5432 27.5203 34.4485 20.6219 35.7288C13.7235 37.0091 8.67838 45.0327 8.67838 48.7714C8.67837 52.5101 9.19318 57.034 14.9075 58.3658C20.6219 59.6975 27.3968 55.4976 30.4032 48.0204Z" fill="#F2CCFF"/>
			<path d="M20.7979 38.0263C23.1146 38.2311 24.5045 41.0479 21.6216 41.0479C18.7387 41.0479 15.9587 43.5575 14.3629 45.7085C12.767 47.8595 11.6859 46.6304 13.0759 43.7111C14.4658 40.7919 18.4813 37.8214 20.7979 38.0263Z" fill="#F8E6FF"/>
			<ellipse cx="11.8187" cy="48.6689" rx="1.02961" ry="1.0243" fill="#F8E6FF"/>
			<path d="M96.752 23.664H106.64C108.496 23.664 109.947 24.1867 110.992 25.232C112.059 26.2773 112.592 27.6747 112.592 29.424C112.592 30.256 112.475 30.9707 112.24 31.568C112.005 32.144 111.707 32.624 111.344 33.008C110.981 33.3707 110.565 33.648 110.096 33.84C109.627 34.0107 109.168 34.1173 108.72 34.16V34.352C109.168 34.3733 109.659 34.48 110.192 34.672C110.747 34.864 111.259 35.1733 111.728 35.6C112.197 36.0053 112.592 36.5387 112.912 37.2C113.232 37.84 113.392 38.6293 113.392 39.568C113.392 40.464 113.243 41.3067 112.944 42.096C112.667 42.8853 112.272 43.568 111.76 44.144C111.248 44.72 110.64 45.1787 109.936 45.52C109.232 45.84 108.464 46 107.632 46H96.752V23.664ZM100.368 42.896H106.576C107.515 42.896 108.251 42.6507 108.784 42.16C109.317 41.6693 109.584 40.9653 109.584 40.048V38.96C109.584 38.0427 109.317 37.3387 108.784 36.848C108.251 36.3573 107.515 36.112 106.576 36.112H100.368V42.896ZM100.368 33.104H105.968C106.864 33.104 107.557 32.88 108.048 32.432C108.539 31.9627 108.784 31.3013 108.784 30.448V29.424C108.784 28.5707 108.539 27.92 108.048 27.472C107.557 27.0027 106.864 26.768 105.968 26.768H100.368V33.104ZM127.67 43.248H127.542C127.392 43.6533 127.19 44.048 126.934 44.432C126.699 44.816 126.39 45.1573 126.006 45.456C125.643 45.7333 125.195 45.9573 124.662 46.128C124.15 46.2987 123.552 46.384 122.87 46.384C121.142 46.384 119.798 45.8293 118.838 44.72C117.899 43.6107 117.43 42.0213 117.43 39.952V29.36H120.918V39.504C120.918 42.0853 121.984 43.376 124.118 43.376C124.566 43.376 125.003 43.3227 125.43 43.216C125.856 43.088 126.23 42.9067 126.55 42.672C126.891 42.4373 127.158 42.1387 127.35 41.776C127.563 41.4133 127.67 40.9867 127.67 40.496V29.36H131.158V46H127.67V43.248ZM136.152 22.32H139.64V32.112H139.8C140.163 31.1093 140.75 30.3413 141.56 29.808C142.392 29.2533 143.363 28.976 144.472 28.976C146.584 28.976 148.216 29.744 149.368 31.28C150.52 32.7947 151.096 34.928 151.096 37.68C151.096 40.432 150.52 42.576 149.368 44.112C148.216 45.6267 146.584 46.384 144.472 46.384C143.363 46.384 142.392 46.1067 141.56 45.552C140.75 44.9973 140.163 44.2293 139.8 43.248H139.64V46H136.152V22.32ZM143.416 43.376C144.632 43.376 145.603 42.992 146.328 42.224C147.054 41.4347 147.416 40.4 147.416 39.12V36.24C147.416 34.96 147.054 33.936 146.328 33.168C145.603 32.3787 144.632 31.984 143.416 31.984C142.35 31.984 141.454 32.2507 140.728 32.784C140.003 33.296 139.64 33.9787 139.64 34.832V40.528C139.64 41.3813 140.003 42.0747 140.728 42.608C141.454 43.12 142.35 43.376 143.416 43.376ZM155.09 22.32H158.578V32.112H158.738C159.1 31.1093 159.687 30.3413 160.498 29.808C161.33 29.2533 162.3 28.976 163.41 28.976C165.522 28.976 167.154 29.744 168.306 31.28C169.458 32.7947 170.034 34.928 170.034 37.68C170.034 40.432 169.458 42.576 168.306 44.112C167.154 45.6267 165.522 46.384 163.41 46.384C162.3 46.384 161.33 46.1067 160.498 45.552C159.687 44.9973 159.1 44.2293 158.738 43.248H158.578V46H155.09V22.32ZM162.354 43.376C163.57 43.376 164.54 42.992 165.266 42.224C165.991 41.4347 166.354 40.4 166.354 39.12V36.24C166.354 34.96 165.991 33.936 165.266 33.168C164.54 32.3787 163.57 31.984 162.354 31.984C161.287 31.984 160.391 32.2507 159.666 32.784C158.94 33.296 158.578 33.9787 158.578 34.832V40.528C158.578 41.3813 158.94 42.0747 159.666 42.608C160.391 43.12 161.287 43.376 162.354 43.376ZM177.579 46C176.385 46 175.489 45.7013 174.891 45.104C174.315 44.4853 174.027 43.632 174.027 42.544V22.32H177.515V43.152H179.819V46H177.579ZM189.68 46.384C188.486 46.384 187.419 46.1813 186.48 45.776C185.542 45.3707 184.742 44.7947 184.08 44.048C183.419 43.28 182.907 42.3627 182.544 41.296C182.203 40.208 182.032 39.0027 182.032 37.68C182.032 36.3573 182.203 35.1627 182.544 34.096C182.907 33.008 183.419 32.0907 184.08 31.344C184.742 30.576 185.542 29.9893 186.48 29.584C187.419 29.1787 188.486 28.976 189.68 28.976C190.896 28.976 191.963 29.1893 192.88 29.616C193.819 30.0427 194.598 30.64 195.216 31.408C195.835 32.1547 196.294 33.0293 196.592 34.032C196.912 35.0347 197.072 36.112 197.072 37.264V38.576H185.648V39.12C185.648 40.4 186.022 41.456 186.768 42.288C187.536 43.0987 188.624 43.504 190.032 43.504C191.056 43.504 191.92 43.28 192.624 42.832C193.328 42.384 193.926 41.776 194.416 41.008L196.464 43.024C195.846 44.048 194.95 44.8693 193.776 45.488C192.603 46.0853 191.238 46.384 189.68 46.384ZM189.68 31.696C189.083 31.696 188.528 31.8027 188.016 32.016C187.526 32.2293 187.099 32.528 186.736 32.912C186.395 33.296 186.128 33.7547 185.936 34.288C185.744 34.8213 185.648 35.408 185.648 36.048V36.272H193.392V35.952C193.392 34.672 193.062 33.648 192.4 32.88C191.739 32.0907 190.832 31.696 189.68 31.696Z" fill="#232340"/>
		</svg>
	);
};

export const GitHub = (props: SVGAttributes<SVGElement>) => {
	return (
		<svg viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" {...props}>
			<path
				fillRule="evenodd"
				clipRule="evenodd"
				d="M16 8.28c0 3.453-2.042 6.412-4.944 7.655-.753.23-1.466-.171-1.466-.877 0-.08 0-.22.002-.408.002-.379.006-.95.006-1.605 0-.684-.221-1.13-.47-1.358 1.539-.182 3.156-.803 3.156-3.62 0-.8-.268-1.455-.71-1.97.072-.184.309-.93-.068-1.94 0 0-.58-.197-1.899.752a6.266 6.266 0 00-1.732-.247 6.246 6.246 0 00-1.73.247c-1.321-.95-1.902-.752-1.902-.752-.374 1.01-.138 1.756-.066 1.94-.442.515-.712 1.17-.712 1.97 0 2.81 1.614 3.439 3.149 3.625-.197.183-.377.508-.439.981-.393.187-1.394.512-2.01-.61 0 0-.367-.703-1.06-.755 0 0-.675-.01-.048.446 0 0 .453.226.767 1.074 0 0 .406 1.308 2.33.865.001.356.004.7.006.96v.003l.003.402c-.009.595-.486 1.07-1.184.891C2.059 14.716 0 11.747 0 8.28 0 3.707 3.582 0 8 0s8 3.707 8 8.28z"
				fill="currentColor"
			/>
		</svg>
	);
};

export const Medium = (props: SVGAttributes<SVGElement>) => {
	return (
		<svg viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" {...props}>
			<path
				fillRule="evenodd"
				clipRule="evenodd"
				d="M16 1.96C16 .88 15.121 0 14.04 0H1.96C.88 0 0 .879 0 1.96v12.08C0 15.12.879 16 1.96 16h12.08c1.081 0 1.96-.879 1.96-1.96V1.96zM8.86 8c0 2.107-1.696 3.816-3.789 3.816S1.281 10.107 1.281 8c0-2.107 1.697-3.816 3.79-3.816S8.861 5.893 8.861 8zm4.158 0c0 1.984-.848 3.592-1.895 3.592-1.046 0-1.895-1.608-1.895-3.592s.849-3.592 1.895-3.592c1.047 0 1.895 1.608 1.895 3.592zm1.7 0c0 1.777-.298 3.218-.666 3.218-.368 0-.666-1.44-.666-3.218 0-1.777.298-3.218.666-3.218.368 0 .667 1.44.667 3.218z"
				fill="currentColor"
			/>
		</svg>
	);
};

export const Telegram = (props: SVGAttributes<SVGElement>) => {
	return (
		<svg viewBox="0 0 16 15" fill="none" xmlns="http://www.w3.org/2000/svg" {...props}>
			<path
				fillRule="evenodd"
				clipRule="evenodd"
				d="M12.256 13.962c.215.16.491.2.738.102a.807.807 0 00.483-.593c.579-2.883 1.984-10.18 2.512-12.802a.57.57 0 00-.174-.535.51.51 0 00-.531-.099C12.489 1.131 3.88 4.551.362 5.93A.584.584 0 000 6.494a.58.58 0 00.396.539c1.578.5 3.649 1.195 3.649 1.195s.968 3.095 1.472 4.67a.6.6 0 00.402.406.555.555 0 00.541-.146l2.064-2.063s2.381 1.848 3.732 2.867zm-7.34-6.125l1.12 3.909.248-2.476 6.79-6.484a.204.204 0 00.022-.266.183.183 0 00-.25-.045l-7.93 5.362z"
				fill="currentColor"
			/>
		</svg>
	);
};

export const Twitter = (props: SVGAttributes<SVGElement>) => {
	return (
		<svg viewBox="0 0 16 13" fill="none" xmlns="http://www.w3.org/2000/svg" {...props}>
			<path
				fillRule="evenodd"
				clipRule="evenodd"
				d="M14.115 1.988A3.196 3.196 0 0015.558.232a6.707 6.707 0 01-2.085.77A3.325 3.325 0 0011.077 0C9.265 0 7.796 1.42 7.796 3.173c0 .249.027.491.083.723A9.428 9.428 0 011.114.58 3.086 3.086 0 00.67 2.176c0 1.1.579 2.072 1.46 2.642a3.38 3.38 0 01-1.488-.396v.039c0 1.538 1.131 2.82 2.635 3.111a3.315 3.315 0 01-.866.112c-.212 0-.418-.02-.617-.056.417 1.26 1.63 2.179 3.066 2.203A6.73 6.73 0 01.783 11.19 6.77 6.77 0 010 11.146a9.53 9.53 0 005.032 1.425c6.038 0 9.339-4.835 9.339-9.03a8.57 8.57 0 00-.009-.41A6.53 6.53 0 0016 1.489a6.73 6.73 0 01-1.885.5z"
				fill="currentColor"
			/>
		</svg>
	);
};

export const Toggle = (props: SVGAttributes<SVGElement>) => {
	return (
		<svg
			width={24}
			height={10}
			viewBox="0 0 24 10"
			fill="none"
			xmlns="http://www.w3.org/2000/svg"
			{...props}
		>
			<path fill="currentColor" d="M0 0h24v1H0zM0 9h24v1H0z" />
		</svg>
	);
};

export const Close = (props: SVGAttributes<SVGElement>) => {
	return (
		<svg
			width={33}
			height={33}
			viewBox="0 0 33 33"
			fill="none"
			xmlns="http://www.w3.org/2000/svg"
			{...props}
		>
			<path fill="currentColor" d="M8.723 8.015L24.986 24.28l-.707.707L8.016 8.722z" />
			<path fill="currentColor" d="M24.984 8.721L8.721 24.985l-.707-.707L24.277 8.014z" />
		</svg>
	);
};

export const ArrowUp = (props: SVGAttributes<SVGElement>) => {
	return (
		<svg viewBox="0 0 19 19" fill="none" xmlns="http://www.w3.org/2000/svg" {...props}>
			<path d="M6.913 1H18m0 0L1 18M18 1v11.826" stroke="currentColor" strokeWidth={2} />
		</svg>
	);
};

export const Envelop = (props: SVGAttributes<SVGElement>) => {
	return (
		<svg viewBox="0 0 22 18" fill="none" xmlns="http://www.w3.org/2000/svg" {...props}>
			<path
				d="M19.207 0H2.793A2.796 2.796 0 000 2.793v11.82a2.796 2.796 0 002.793 2.794h16.414A2.796 2.796 0 0022 14.614V2.793c0 .106-.295-1.45-.819-1.974A2.796 2.796 0 0019.207 0zm.545 13.57a.524.524 0 01-.742.742l-4.867-4.868-2.772 2.773a.524.524 0 01-.742 0L7.857 9.444 2.99 14.312a.524.524 0 11-.742-.742l4.868-4.867-4.868-4.867a.524.524 0 01.742-.742L11 11.105l8.01-8.01a.525.525 0 01.742.741l-4.868 4.867 4.868 4.867z"
				fill="currentColor"
			/>
		</svg>
	);
};
